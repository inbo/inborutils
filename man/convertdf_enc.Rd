% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convertdf_enc.R
\name{convertdf_enc}
\alias{convertdf_enc}
\title{Convert encoding of character and factor variables in a dataframe}
\usage{
convertdf_enc(x, from = "", to = "UTF-8", sub = NA, colnames = FALSE)
}
\arguments{
\item{x}{An object with the \code{data.frame}
class (such as \code{data.frame} or \code{sf})}

\item{from}{A character string describing the current encoding.}

\item{to}{A character string describing the target encoding.}

\item{sub}{character string.  If not \code{NA} it is used to replace
    any non-convertible bytes in the input.  (This would normally be a
    single character, but can be more.)  If \code{"byte"}, the indication is
    \code{"<xx>"} with the hex code of the byte.  If \code{"Unicode"}
    and converting from UTF-8, the Unicode point in the form
    \code{"<U+xxxx>"}, or if \code{c99}, a C99-style escape
    \code{"\uxxxx"}.}

\item{colnames}{Should column names be converted as well?}
}
\value{
The original object, with character variables (and levels of
(character) factor variables) converted to the specified encoding.
}
\description{
Convert encoding of character and factor variables in a dataframe
}
\details{
Encoding strings: all \code{R} platforms support \code{""} (for the
encoding of the current
locale), \code{"latin1"} and \code{"UTF-8"}.
See \code{\link[base]{iconv}} for more information.
}
\seealso{
Other Data_handling_utilities: 
\code{\link{csv_to_sqlite}()},
\code{\link{df_factors_to_char}()}
}
\concept{Data_handling_utilities}
